kind: Template
apiVersion: v1
metadata:
  name: angular-template
  annotations:
    openshift.io/display-name: "Angular" 
    description: >-
        An example Angular application. For more information
        about using this template, including OpenShift considerations, see
        http://hlgithub.hobbylobby.corp/stmhall1/angular-ex/blob/master/README.md.
    openshift.io/long-description: >-
        This template defines resources needed to develop an Angular application,
        including a build configuration, application deployment configuration.
    tags: "quickstart, nodejs, angular" 
    iconClass: icon-angularjs
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}-nginx"        
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"  
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: "${APP_NAME}:latest"
      source:
        contextDir: "${CONTEXT_DIR}"
        git:
          ref: "${SOURCE_REPOSITORY_REF}"
          uri: "${SOURCE_REPOSITORY_URL}"
        sourceSecret:
          name: "${GIT_SECRET}"
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: NPM_RUN
              value: "${NPM_RUN}"
          from:
            kind: ImageStreamTag
            name: 'hl-s2i-nodejs:latest'
            namespace: openshift
        type: Source
      triggers:
        - type: ImageChange
        - type: ConfigChange  
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}-nginx"
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: "${APP_NAME}-nginx:latest"
      source:
        type: Dockerfile
        dockerfile: |-
          FROM nginx:1.12
          ADD dist . 
      
          ENV PORT 8080
          CMD ["/usr/libexec/s2i/run"]
        images:
        - from: 
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
          paths: 
          - sourcePath: /opt/app-root/src/dist
            destinationDir: "."
      strategy:
        dockerStrategy:
          from: 
            kind: ImageStreamTag
            name: nginx:1.12
            namespace: openshift
        type: Docker
      triggers:
        - type: ConfigChange
        - imageChange:
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:latest"
          type: ImageChange        
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}-svc"
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: "${APP_NAME}-nginx"
        deploymentconfig: "${APP_NAME}-nginx"
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}-nginx"
    spec:
      replicas: 1
      selector:
        app: "${APP_NAME}-nginx"
        deploymentconfig: "${APP_NAME}-nginx"
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: "${APP_NAME}-nginx"
            deploymentconfig: "${APP_NAME}-nginx"
        spec:
          containers:
            - env:
                - name: FOO
                  value: BAR
              image: "${APP_NAME}-nginx:latest"
              imagePullPolicy: Always
              name: "${APP_NAME}-nginx"
              volumeMounts:
                - mountPath: /opt/app-root/src/assets/data/
                  name: ${APP_NAME}-config
                  readOnly: true
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${APP_NAME}-config
              secret:
                defaultMode: 420
                secretName: "${WEBCLIENT_CONFIG}"
      test: false      
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-nginx"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}-nginx:latest"
          type: ImageChange      
parameters:
  - name: APP_NAME
    displayName: Name of application 
    description: Name of application
    value: angular-ex 
    required: true
  - name: SOURCE_REPOSITORY_URL 
    displayName: Source Repository URL 
    description: The URL of the repository with your application source code 
    value: http://hlgithub.hobbylobby.corp/stmhall1/angular-ex.git 
    required: true
  - name: SOURCE_REPOSITORY_REF 
    displayName: Source Repository Branch 
    description: The branch within the repository with your application source code 
    value: master
    required: true
  - name: CONTEXT_DIR
    displayName: Source directory
    description: The directory within the repo with your application soure code
    value: angular-ex
  - name: NPM_RUN
    displayName: NPM run script
    description: Name of NPM script to run
    value: angular-ex 
    required: true    
  - name: WEBCLIENT_CONFIG
    displayName: Config for Angular client
    description: Name of config.json for Angular client
    value: webclient-dev-config
    required: true       
  - name: GIT_SECRET
    description: Secret containing Git svc account credentials
    displayName: GitHub User Secret
    value: svc-jenkins
    required: true
message: "App created"